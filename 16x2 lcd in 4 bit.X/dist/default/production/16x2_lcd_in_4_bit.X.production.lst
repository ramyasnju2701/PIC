

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 22 15:17:07 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0006                     _PORTBbits	set	6
   172     0006                     _PORTB	set	6
   173     0086                     _TRISB	set	134
   174                           
   175                           	psect	strings
   176     0003                     __pstrings:
   177     0003                     stringtab:
   178     0003                     __stringtab:
   179     0003                     stringcode:	
   180                           ;	String table - string pointers are 1 byte each
   181                           
   182     0003                     stringdir:
   183     0003  3000               	movlw	high stringdir
   184     0004  008A               	movwf	10
   185     0005  0804               	movf	4,w
   186     0006  0A84               	incf	4,f
   187     0007  0782               	addwf	2,f
   188     0008                     __stringbase:
   189     0008  3400               	retlw	0
   190     0009                     __end_of__stringtab:
   191     0009                     STR_2:
   192     0009  3447               	retlw	71	;'G'
   193     000A  344F               	retlw	79	;'O'
   194     000B  3457               	retlw	87	;'W'
   195     000C  3444               	retlw	68	;'D'
   196     000D  3441               	retlw	65	;'A'
   197     000E  3400               	retlw	0
   198     000F                     STR_1:
   199     000F  3452               	retlw	82	;'R'
   200     0010  3441               	retlw	65	;'A'
   201     0011  344D               	retlw	77	;'M'
   202     0012  3459               	retlw	89	;'Y'
   203     0013  3441               	retlw	65	;'A'
   204     0014  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207     07FC                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07FC                     __initialization:
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219     0070                     __pcstackCOMMON:
   220     0070                     ?_lcd_command:
   221     0070                     ??_lcd_command:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_lcd_data:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_lcd_data:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_lcd_initialize:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238     0070                     	ds	2
   239     0072                     lcd_command@command:
   240     0072                     lcd_data@data:	
   241                           ; 1 bytes @ 0x2
   242                           
   243                           
   244                           ; 1 bytes @ 0x2
   245     0072                     	ds	1
   246     0073                     ??_lcd_initialize:
   247     0073                     ?_lcd_string:	
   248                           ; 1 bytes @ 0x3
   249                           
   250     0073                     lcd_string@num:	
   251                           ; 1 bytes @ 0x3
   252                           
   253                           
   254                           ; 1 bytes @ 0x3
   255     0073                     	ds	1
   256     0074                     ??_lcd_string:
   257                           
   258                           ; 1 bytes @ 0x4
   259     0074                     	ds	1
   260     0075                     lcd_string@string:
   261                           
   262                           ; 1 bytes @ 0x5
   263     0075                     	ds	1
   264     0076                     lcd_string@i:
   265                           
   266                           ; 1 bytes @ 0x6
   267     0076                     	ds	1
   268     0077                     ??_main:
   269                           
   270                           	psect	maintext
   271     0772                     __pmaintext:	
   272                           ; 1 bytes @ 0x7
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 68 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called: 2
   298 ;; This function calls:
   299 ;;		_lcd_command
   300 ;;		_lcd_initialize
   301 ;;		_lcd_string
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307     0772                     _main:	
   308                           ;psect for function _main
   309                           
   310     0772                     l701:	
   311                           ;incstack = 0
   312                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   313                           
   314     0772  1683               	bsf	3,5	;RP0=1, select bank1
   315     0773  1303               	bcf	3,6	;RP1=0, select bank1
   316     0774  0186               	clrf	6	;volatile
   317     0775                     l703:
   318     0775  120A  118A  2753  120A  118A  	fcall	_lcd_initialize
   319     077A                     l705:
   320     077A  3080               	movlw	128
   321     077B  120A  118A  279A  120A  118A  	fcall	_lcd_command
   322     0780                     l707:
   323     0780  3005               	movlw	5
   324     0781  00F3               	movwf	lcd_string@num
   325     0782  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   326     0783  120A  118A  2738  120A  118A  	fcall	_lcd_string
   327     0788                     l709:
   328     0788  30C0               	movlw	192
   329     0789  120A  118A  279A  120A  118A  	fcall	_lcd_command
   330     078E                     l711:
   331     078E  3005               	movlw	5
   332     078F  00F3               	movwf	lcd_string@num
   333     0790  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   334     0791  120A  118A  2738  120A  118A  	fcall	_lcd_string
   335     0796  2F7A               	goto	l705
   336     0797  120A  118A  2800   	ljmp	start
   337     079A                     __end_of_main:
   338                           
   339                           	psect	text1
   340     0738                     __ptext1:	
   341 ;; *************** function _lcd_string *****************
   342 ;; Defined at:
   343 ;;		line 58 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;  string          1    wreg     PTR const unsigned char 
   346 ;;		 -> STR_2(6), STR_1(6), 
   347 ;;  num             1    3[COMMON] unsigned char 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  string          1    5[COMMON] PTR const unsigned char 
   350 ;;		 -> STR_2(6), STR_1(6), 
   351 ;;  i               1    6[COMMON] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         1       0       0       0       0
   362 ;;      Locals:         2       0       0       0       0
   363 ;;      Temps:          1       0       0       0       0
   364 ;;      Totals:         4       0       0       0       0
   365 ;;Total ram usage:        4 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; Hardware stack levels required when called: 1
   368 ;; This function calls:
   369 ;;		_lcd_data
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375     0738                     _lcd_string:	
   376                           ;psect for function _lcd_string
   377                           
   378                           
   379                           ;incstack = 0
   380                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   381                           ;lcd_string@string stored from wreg
   382     0738  00F5               	movwf	lcd_string@string
   383     0739                     l693:
   384                           
   385                           ;main.c: 58:     lcd_initialize();;main.c: 59:     while(1);main.c: 60:     {;main.c: 61
      +                          :      lcd_command(0x80);
   386     0739  01F6               	clrf	lcd_string@i
   387     073A  2F4C               	goto	l699
   388     073B                     l695:
   389                           
   390                           ;main.c: 62:      lcd_string("RAMYA",5);;main.c: 63:      lcd_command(0xc0);
   391     073B  0876               	movf	lcd_string@i,w
   392     073C  0775               	addwf	lcd_string@string,w
   393     073D  0084               	movwf	4
   394     073E  120A  118A  2003  120A  118A  	fcall	stringdir
   395     0743  120A  118A  27CB  120A  118A  	fcall	_lcd_data
   396     0748                     l697:
   397                           
   398                           ;main.c: 64:      lcd_string("GOWDA",5);
   399     0748  3001               	movlw	1
   400     0749  00F4               	movwf	??_lcd_string
   401     074A  0874               	movf	??_lcd_string,w
   402     074B  07F6               	addwf	lcd_string@i,f
   403     074C                     l699:
   404     074C  0873               	movf	lcd_string@num,w
   405     074D  0276               	subwf	lcd_string@i,w
   406     074E  1C03               	skipc
   407     074F  2F51               	goto	u41
   408     0750  2F52               	goto	u40
   409     0751                     u41:
   410     0751  2F3B               	goto	l695
   411     0752                     u40:
   412     0752                     l23:
   413     0752  0008               	return
   414     0753                     __end_of_lcd_string:
   415                           
   416                           	psect	text2
   417     07CB                     __ptext2:	
   418 ;; *************** function _lcd_data *****************
   419 ;; Defined at:
   420 ;;		line 34 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  data            1    wreg     unsigned char 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  data            1    2[COMMON] unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         1       0       0       0       0
   436 ;;      Temps:          2       0       0       0       0
   437 ;;      Totals:         3       0       0       0       0
   438 ;;Total ram usage:        3 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_lcd_string
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447     07CB                     _lcd_data:	
   448                           ;psect for function _lcd_data
   449                           
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   453                           ;lcd_data@data stored from wreg
   454     07CB  00F2               	movwf	lcd_data@data
   455     07CC                     l647:
   456                           
   457                           ;main.c: 34:     _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 35:     PORTBbi
      +                          ts.RB2 = 0;;main.c: 36: }
   458     07CC  0872               	movf	lcd_data@data,w
   459     07CD  39F0               	andlw	240
   460     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   461     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   462     07D0  0086               	movwf	6	;volatile
   463     07D1                     l649:
   464                           
   465                           ;main.c: 37: 
   466     07D1  1406               	bsf	6,0	;volatile
   467     07D2                     l651:
   468                           
   469                           ;main.c: 38: void lcd_initialize()
   470     07D2  1086               	bcf	6,1	;volatile
   471     07D3                     l653:
   472                           
   473                           ;main.c: 39: {
   474     07D3  1506               	bsf	6,2	;volatile
   475     07D4                     l655:
   476                           
   477                           ;main.c: 40:     lcd_command(0x02);
   478     07D4  300D               	movlw	13
   479     07D5  00F1               	movwf	??_lcd_data+1
   480     07D6  30FB               	movlw	251
   481     07D7  00F0               	movwf	??_lcd_data
   482     07D8                     u57:
   483     07D8  0BF0               	decfsz	??_lcd_data,f
   484     07D9  2FD8               	goto	u57
   485     07DA  0BF1               	decfsz	??_lcd_data+1,f
   486     07DB  2FD8               	goto	u57
   487     07DC  2FDD               	nop2
   488     07DD                     l657:
   489                           
   490                           ;main.c: 41:     lcd_command(0x28);
   491     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   492     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   493     07DF  1106               	bcf	6,2	;volatile
   494     07E0                     l659:
   495                           
   496                           ;main.c: 42:     lcd_command(0x0c);
   497     07E0  0872               	movf	lcd_data@data,w
   498     07E1  00F0               	movwf	??_lcd_data
   499     07E2  3003               	movlw	3
   500     07E3                     u25:
   501     07E3  1003               	clrc
   502     07E4  0DF0               	rlf	??_lcd_data,f
   503     07E5  3EFF               	addlw	-1
   504     07E6  1D03               	skipz
   505     07E7  2FE3               	goto	u25
   506     07E8  1003               	clrc
   507     07E9  0D70               	rlf	??_lcd_data,w
   508     07EA  39F0               	andlw	240
   509     07EB  0086               	movwf	6	;volatile
   510     07EC                     l661:
   511                           
   512                           ;main.c: 43:     lcd_command(0x06);
   513     07EC  1406               	bsf	6,0	;volatile
   514     07ED                     l663:
   515                           
   516                           ;main.c: 44:     lcd_command(0x01);
   517     07ED  1086               	bcf	6,1	;volatile
   518     07EE                     l665:
   519                           
   520                           ;main.c: 45: }
   521     07EE  1506               	bsf	6,2	;volatile
   522     07EF                     l667:
   523                           
   524                           ;main.c: 46: void lcd_string(const unsigned char *string, unsigned char num)
   525     07EF  300D               	movlw	13
   526     07F0  00F1               	movwf	??_lcd_data+1
   527     07F1  30FB               	movlw	251
   528     07F2  00F0               	movwf	??_lcd_data
   529     07F3                     u67:
   530     07F3  0BF0               	decfsz	??_lcd_data,f
   531     07F4  2FF3               	goto	u67
   532     07F5  0BF1               	decfsz	??_lcd_data+1,f
   533     07F6  2FF3               	goto	u67
   534     07F7  2FF8               	nop2
   535     07F8                     l669:
   536                           
   537                           ;main.c: 47: {
   538     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   539     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   540     07FA  1106               	bcf	6,2	;volatile
   541     07FB                     l14:
   542     07FB  0008               	return
   543     07FC                     __end_of_lcd_data:
   544                           
   545                           	psect	text3
   546     0753                     __ptext3:	
   547 ;; *************** function _lcd_initialize *****************
   548 ;; Defined at:
   549 ;;		line 50 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 1
   570 ;; This function calls:
   571 ;;		_lcd_command
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577     0753                     _lcd_initialize:	
   578                           ;psect for function _lcd_initialize
   579                           
   580     0753                     l671:	
   581                           ;incstack = 0
   582                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main.c: 52:     }
   586     0753  3002               	movlw	2
   587     0754  120A  118A  279A  120A  118A  	fcall	_lcd_command
   588                           
   589                           ;main.c: 53: }
   590     0759  3028               	movlw	40
   591     075A  120A  118A  279A  120A  118A  	fcall	_lcd_command
   592                           
   593                           ;main.c: 54: 
   594     075F  300C               	movlw	12
   595     0760  120A  118A  279A  120A  118A  	fcall	_lcd_command
   596                           
   597                           ;main.c: 55: 
   598     0765  3006               	movlw	6
   599     0766  120A  118A  279A  120A  118A  	fcall	_lcd_command
   600                           
   601                           ;main.c: 56: void main(void) {
   602     076B  3001               	movlw	1
   603     076C  120A  118A  279A  120A  118A  	fcall	_lcd_command
   604     0771                     l17:
   605     0771  0008               	return
   606     0772                     __end_of_lcd_initialize:
   607                           
   608                           	psect	text4
   609     079A                     __ptext4:	
   610 ;; *************** function _lcd_command *****************
   611 ;; Defined at:
   612 ;;		line 17 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  command         1    wreg     unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  command         1    2[COMMON] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         1       0       0       0       0
   628 ;;      Temps:          2       0       0       0       0
   629 ;;      Totals:         3       0       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_lcd_initialize
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     079A                     _lcd_command:	
   641                           ;psect for function _lcd_command
   642                           
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
   646                           ;lcd_command@command stored from wreg
   647     079A  00F2               	movwf	lcd_command@command
   648     079B                     l623:
   649                           
   650                           ;main.c: 17:         _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 18:     POR
      +                          TBbits.RB2 = 0;;main.c: 19: 
   651     079B  0872               	movf	lcd_command@command,w
   652     079C  39F0               	andlw	240
   653     079D  1283               	bcf	3,5	;RP0=0, select bank0
   654     079E  1303               	bcf	3,6	;RP1=0, select bank0
   655     079F  0086               	movwf	6	;volatile
   656     07A0                     l625:
   657                           
   658                           ;main.c: 20: 
   659     07A0  1006               	bcf	6,0	;volatile
   660     07A1                     l627:
   661                           
   662                           ;main.c: 21: }
   663     07A1  1086               	bcf	6,1	;volatile
   664     07A2                     l629:
   665                           
   666                           ;main.c: 22: void lcd_data (unsigned char data)
   667     07A2  1506               	bsf	6,2	;volatile
   668     07A3                     l631:
   669                           
   670                           ;main.c: 23: {
   671     07A3  300D               	movlw	13
   672     07A4  00F1               	movwf	??_lcd_command+1
   673     07A5  30FB               	movlw	251
   674     07A6  00F0               	movwf	??_lcd_command
   675     07A7                     u77:
   676     07A7  0BF0               	decfsz	??_lcd_command,f
   677     07A8  2FA7               	goto	u77
   678     07A9  0BF1               	decfsz	??_lcd_command+1,f
   679     07AA  2FA7               	goto	u77
   680     07AB  2FAC               	nop2
   681     07AC                     l633:
   682                           
   683                           ;main.c: 24:   PORTB = (data & 0xF0);
   684     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   685     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   686     07AE  1106               	bcf	6,2	;volatile
   687     07AF                     l635:
   688                           
   689                           ;main.c: 25:     PORTBbits.RB0 = 1;
   690     07AF  0872               	movf	lcd_command@command,w
   691     07B0  00F0               	movwf	??_lcd_command
   692     07B1  3003               	movlw	3
   693     07B2                     u15:
   694     07B2  1003               	clrc
   695     07B3  0DF0               	rlf	??_lcd_command,f
   696     07B4  3EFF               	addlw	-1
   697     07B5  1D03               	skipz
   698     07B6  2FB2               	goto	u15
   699     07B7  1003               	clrc
   700     07B8  0D70               	rlf	??_lcd_command,w
   701     07B9  39F0               	andlw	240
   702     07BA  0086               	movwf	6	;volatile
   703     07BB                     l637:
   704                           
   705                           ;main.c: 26:     PORTBbits.RB1 = 0;
   706     07BB  1006               	bcf	6,0	;volatile
   707     07BC                     l639:
   708                           
   709                           ;main.c: 27:     PORTBbits.RB2 = 1;
   710     07BC  1086               	bcf	6,1	;volatile
   711     07BD                     l641:
   712                           
   713                           ;main.c: 28:     _delay((unsigned long)((2)*(20000000/4000.0)));
   714     07BD  1506               	bsf	6,2	;volatile
   715     07BE                     l643:
   716                           
   717                           ;main.c: 29:     PORTBbits.RB2 = 0;
   718     07BE  300D               	movlw	13
   719     07BF  00F1               	movwf	??_lcd_command+1
   720     07C0  30FB               	movlw	251
   721     07C1  00F0               	movwf	??_lcd_command
   722     07C2                     u87:
   723     07C2  0BF0               	decfsz	??_lcd_command,f
   724     07C3  2FC2               	goto	u87
   725     07C4  0BF1               	decfsz	??_lcd_command+1,f
   726     07C5  2FC2               	goto	u87
   727     07C6  2FC7               	nop2
   728     07C7                     l645:
   729                           
   730                           ;main.c: 30:     PORTB = ((data<<4)& 0xF0);
   731     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   732     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   733     07C9  1106               	bcf	6,2	;volatile
   734     07CA                     l11:
   735     07CA  0008               	return
   736     07CB                     __end_of_lcd_command:
   737     007E                     btemp	set	126	;btemp
   738     007E                     wtemp0	set	126
   739                           
   740                           	psect	idloc
   741                           
   742                           ;Config register IDLOC0 @ 0x2000
   743                           ;	unspecified, using default values
   744     2000                     	org	8192
   745     2000  3FFF               	dw	16383
   746                           
   747                           ;Config register IDLOC1 @ 0x2001
   748                           ;	unspecified, using default values
   749     2001                     	org	8193
   750     2001  3FFF               	dw	16383
   751                           
   752                           ;Config register IDLOC2 @ 0x2002
   753                           ;	unspecified, using default values
   754     2002                     	org	8194
   755     2002  3FFF               	dw	16383
   756                           
   757                           ;Config register IDLOC3 @ 0x2003
   758                           ;	unspecified, using default values
   759     2003                     	org	8195
   760     2003  3FFF               	dw	16383
   761                           
   762                           	psect	config
   763                           
   764                           ;Config register CONFIG @ 0x2007
   765                           ;	Oscillator Selection bits
   766                           ;	FOSC = HS, HS oscillator
   767                           ;	Watchdog Timer Enable bit
   768                           ;	WDTE = OFF, WDT disabled
   769                           ;	Power-up Timer Enable bit
   770                           ;	PWRTE = OFF, PWRT disabled
   771                           ;	Brown-out Reset Enable bit
   772                           ;	BOREN = OFF, BOR disabled
   773                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   774                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   775                           ;	Data EEPROM Memory Code Protection bit
   776                           ;	CPD = OFF, Data EEPROM code protection off
   777                           ;	Flash Program Memory Write Enable bits
   778                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   779                           ;	In-Circuit Debugger Mode bit
   780                           ;	DEBUG = 0x1, unprogrammed default
   781                           ;	Flash Program Memory Code Protection bit
   782                           ;	CP = OFF, Code protection off
   783     2007                     	org	8199
   784     2007  3FBA               	dw	16314

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@string	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialize->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     398
                        _lcd_command
                     _lcd_initialize
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     338
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       0     0      0      30
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialize
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 22 15:17:07 2024

                      pc 0002             lcd_data@data 0072                       l11 07CA  
                     l14 07FB                       l23 0752                       l17 0771  
                     u15 07B2                       u40 0752                       u25 07E3  
                     u41 0751                       u57 07D8                       u67 07F3  
                     u77 07A7                       u87 07C2                       fsr 0004  
                    l701 0772                      l631 07A3                      l623 079B  
                    l711 078E                      l703 0775                      l641 07BD  
                    l633 07AC                      l625 07A0                      l705 077A  
                    l643 07BE                      l635 07AF                      l627 07A1  
                    l651 07D2                      l707 0780                      l645 07C7  
                    l637 07BB                      l629 07A2                      l661 07EC  
                    l653 07D3                      l709 0788                      l639 07BC  
                    l671 0753                      l663 07ED                      l655 07D4  
                    l647 07CC                      l665 07EE                      l657 07DD  
                    l649 07D1                      l667 07EF                      l659 07E0  
                    l669 07F8                      l693 0739                      l695 073B  
                    l697 0748                      l699 074C                      fsr0 0004  
                   STR_1 000F                     STR_2 0009                     _main 0772  
                   btemp 007E                     start 0000              lcd_string@i 0076  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 079A                   ??_main 0077  
       __end_of_lcd_data 07FC         ??_lcd_initialize 0073            lcd_string@num 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0772  
              ?_lcd_data 0070               _lcd_string 0738               __stringtab 0003  
                __ptext1 0738                  __ptext2 07CB                  __ptext3 0753  
                __ptext4 079A               ??_lcd_data 0070     end_of_initialization 07FC  
              _PORTBbits 0006              ?_lcd_string 0073            ??_lcd_command 0070  
    start_initialization 07FC       lcd_command@command 0072      __end_of_lcd_command 07CB  
              ___latbits 0002                __pstrings 0003              _lcd_command 079A  
            __stringbase 0008             ??_lcd_string 0074       __end_of_lcd_string 0753  
     __end_of__stringtab 0009                 _lcd_data 07CB           _lcd_initialize 0753  
 __end_of_lcd_initialize 0772                stringcode 0003                 stringdir 0003  
               stringtab 0003         lcd_string@string 0075          ?_lcd_initialize 0070  
           ?_lcd_command 0070  
