

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Apr 23 15:42:56 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0006                     _PORTBbits	set	6
   173     0008                     _PORTDbits	set	8
   174     0007                     _PORTC	set	7
   175     0086                     _TRISB	set	134
   176     0088                     _TRISD	set	136
   177     0087                     _TRISC	set	135
   178                           
   179                           	psect	strings
   180     0003                     __pstrings:
   181     0003                     stringtab:
   182     0003                     __stringtab:
   183     0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186     0003                     stringdir:
   187     0003  3000               	movlw	high stringdir
   188     0004  008A               	movwf	10
   189     0005  0804               	movf	4,w
   190     0006  0A84               	incf	4,f
   191     0007  0782               	addwf	2,f
   192     0008                     __stringbase:
   193     0008  3400               	retlw	0
   194     0009                     __end_of__stringtab:
   195     0009                     STR_1:
   196     0009  344B               	retlw	75	;'K'
   197     000A  3445               	retlw	69	;'E'
   198     000B  3459               	retlw	89	;'Y'
   199     000C  3450               	retlw	80	;'P'
   200     000D  3441               	retlw	65	;'A'
   201     000E  3444               	retlw	68	;'D'
   202     000F  343A               	retlw	58	;':'
   203     0010  3400               	retlw	0
   204                           
   205                           	psect	cinit
   206     07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209     07FC                     __initialization:
   210     07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213     07FC                     __end_of__initialization:
   214     07FC  0183               	clrf	3
   215     07FD  120A  118A  2F08   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218     0070                     __pcstackCOMMON:
   219     0070                     ?_lcd_data:
   220     0070                     ??_lcd_data:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_lcd_cmd:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ??_lcd_cmd:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_lcd_initialise:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_keypad:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 1 bytes @ 0x0
   240     0070                     	ds	2
   241     0072                     lcd_data@data:
   242     0072                     lcd_cmd@cmd:	
   243                           ; 1 bytes @ 0x2
   244                           
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	1
   248     0073                     ?_lcd_string:
   249     0073                     ??_lcd_initialise:	
   250                           ; 1 bytes @ 0x3
   251                           
   252     0073                     ??_keypad:	
   253                           ; 1 bytes @ 0x3
   254                           
   255     0073                     lcd_string@num:	
   256                           ; 1 bytes @ 0x3
   257                           
   258                           
   259                           ; 1 bytes @ 0x3
   260     0073                     	ds	1
   261     0074                     ??_lcd_string:
   262                           
   263                           ; 1 bytes @ 0x4
   264     0074                     	ds	1
   265     0075                     lcd_string@string:
   266                           
   267                           ; 1 bytes @ 0x5
   268     0075                     	ds	1
   269     0076                     lcd_string@i:
   270                           
   271                           ; 1 bytes @ 0x6
   272     0076                     	ds	1
   273     0077                     ??_main:
   274                           
   275                           	psect	maintext
   276     0708                     __pmaintext:	
   277                           ; 1 bytes @ 0x7
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 124 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called: 2
   303 ;; This function calls:
   304 ;;		_keypad
   305 ;;		_lcd_cmd
   306 ;;		_lcd_initialise
   307 ;;		_lcd_string
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313     0708                     _main:	
   314                           ;psect for function _main
   315                           
   316     0708                     l758:	
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   319                           
   320                           
   321                           ;main.c: 126:     TRISC = 0X00;
   322     0708  1683               	bsf	3,5	;RP0=1, select bank1
   323     0709  1303               	bcf	3,6	;RP1=0, select bank1
   324     070A  0187               	clrf	7	;volatile
   325                           
   326                           ;main.c: 127:     TRISD = 0X00;
   327     070B  0188               	clrf	8	;volatile
   328     070C                     l760:
   329                           
   330                           ;main.c: 128:     TRISB = 0XF0;
   331     070C  30F0               	movlw	240
   332     070D  0086               	movwf	6	;volatile
   333     070E                     l762:
   334                           
   335                           ;main.c: 130:     lcd_initialise();
   336     070E  120A  118A  26D4  120A  118A  	fcall	_lcd_initialise
   337     0713                     l764:
   338                           
   339                           ;main.c: 131:     lcd_cmd (0x80);
   340     0713  3080               	movlw	128
   341     0714  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   342     0719                     l766:
   343                           
   344                           ;main.c: 132:     lcd_string (( const unsigned char*)"KEYPAD:",7);
   345     0719  3007               	movlw	7
   346     071A  00F3               	movwf	lcd_string@num
   347     071B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   348     071C  120A  118A  26ED  120A  118A  	fcall	_lcd_string
   349     0721                     l768:
   350                           
   351                           ;main.c: 133:     lcd_cmd (0xC0);
   352     0721  30C0               	movlw	192
   353     0722  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   354     0727                     l770:
   355                           
   356                           ;main.c: 135:     {;main.c: 136:         keypad();
   357     0727  120A  118A  2730  120A  118A  	fcall	_keypad
   358     072C  2F27               	goto	l770
   359     072D  120A  118A  2800   	ljmp	start
   360     0730                     __end_of_main:
   361                           
   362                           	psect	text1
   363     06ED                     __ptext1:	
   364 ;; *************** function _lcd_string *****************
   365 ;; Defined at:
   366 ;;		line 42 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  string          1    wreg     PTR const unsigned char 
   369 ;;		 -> STR_1(8), 
   370 ;;  num             1    3[COMMON] unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  string          1    5[COMMON] PTR const unsigned char 
   373 ;;		 -> STR_1(8), 
   374 ;;  i               1    6[COMMON] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         1       0       0       0       0
   385 ;;      Locals:         2       0       0       0       0
   386 ;;      Temps:          1       0       0       0       0
   387 ;;      Totals:         4       0       0       0       0
   388 ;;Total ram usage:        4 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; Hardware stack levels required when called: 1
   391 ;; This function calls:
   392 ;;		_lcd_data
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398     06ED                     _lcd_string:	
   399                           ;psect for function _lcd_string
   400                           
   401                           
   402                           ;incstack = 0
   403                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   404                           ;lcd_string@string stored from wreg
   405     06ED  00F5               	movwf	lcd_string@string
   406     06EE                     l750:
   407                           
   408                           ;main.c: 42: void lcd_string (const unsigned char *string,unsigned char num);main.c: 43:
      +                           {;main.c: 44:     unsigned char i ;;main.c: 46: for (i=0;i<num;i++)
   409     06EE  01F6               	clrf	lcd_string@i
   410     06EF  2F01               	goto	l756
   411     06F0                     l752:
   412                           
   413                           ;main.c: 47: {;main.c: 48:     lcd_data(string[i]);
   414     06F0  0876               	movf	lcd_string@i,w
   415     06F1  0775               	addwf	lcd_string@string,w
   416     06F2  0084               	movwf	4
   417     06F3  120A  118A  2003  120A  118A  	fcall	stringdir
   418     06F8  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   419     06FD                     l754:
   420                           
   421                           ;main.c: 49: }
   422     06FD  3001               	movlw	1
   423     06FE  00F4               	movwf	??_lcd_string
   424     06FF  0874               	movf	??_lcd_string,w
   425     0700  07F6               	addwf	lcd_string@i,f
   426     0701                     l756:
   427     0701  0873               	movf	lcd_string@num,w
   428     0702  0276               	subwf	lcd_string@i,w
   429     0703  1C03               	skipc
   430     0704  2F06               	goto	u261
   431     0705  2F07               	goto	u260
   432     0706                     u261:
   433     0706  2EF0               	goto	l752
   434     0707                     u260:
   435     0707                     l26:
   436     0707  0008               	return
   437     0708                     __end_of_lcd_string:
   438                           
   439                           	psect	text2
   440     06D4                     __ptext2:	
   441 ;; *************** function _lcd_initialise *****************
   442 ;; Defined at:
   443 ;;		line 51 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; Hardware stack levels required when called: 1
   464 ;; This function calls:
   465 ;;		_lcd_cmd
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471     06D4                     _lcd_initialise:	
   472                           ;psect for function _lcd_initialise
   473                           
   474     06D4                     l708:	
   475                           ;incstack = 0
   476                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   477                           
   478                           
   479                           ;main.c: 53:     lcd_cmd (0x38);
   480     06D4  3038               	movlw	56
   481     06D5  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   482                           
   483                           ;main.c: 54:     lcd_cmd (0x06);
   484     06DA  3006               	movlw	6
   485     06DB  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   486                           
   487                           ;main.c: 55:     lcd_cmd (0x0C);
   488     06E0  300C               	movlw	12
   489     06E1  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   490                           
   491                           ;main.c: 56:     lcd_cmd (0x01);
   492     06E6  3001               	movlw	1
   493     06E7  120A  118A  26BF  120A  118A  	fcall	_lcd_cmd
   494     06EC                     l29:
   495     06EC  0008               	return
   496     06ED                     __end_of_lcd_initialise:
   497                           
   498                           	psect	text3
   499     06BF                     __ptext3:	
   500 ;; *************** function _lcd_cmd *****************
   501 ;; Defined at:
   502 ;;		line 33 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  cmd             1    wreg     unsigned char 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  cmd             1    2[COMMON] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0
   518 ;;      Temps:          2       0       0       0       0
   519 ;;      Totals:         3       0       0       0       0
   520 ;;Total ram usage:        3 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_lcd_initialise
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     06BF                     _lcd_cmd:	
   531                           ;psect for function _lcd_cmd
   532                           
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _lcd_cmd: [wreg]
   536                           ;lcd_cmd@cmd stored from wreg
   537     06BF  00F2               	movwf	lcd_cmd@cmd
   538     06C0                     l690:
   539                           
   540                           ;main.c: 33: void lcd_cmd(unsigned char cmd);main.c: 34: {;main.c: 35:     PORTC = cmd;
   541     06C0  0872               	movf	lcd_cmd@cmd,w
   542     06C1  1283               	bcf	3,5	;RP0=0, select bank0
   543     06C2  1303               	bcf	3,6	;RP1=0, select bank0
   544     06C3  0087               	movwf	7	;volatile
   545     06C4                     l692:
   546                           
   547                           ;main.c: 36:     PORTDbits.RD0 = 0;
   548     06C4  1008               	bcf	8,0	;volatile
   549     06C5                     l694:
   550                           
   551                           ;main.c: 37:     PORTDbits.RD1 = 0;
   552     06C5  1088               	bcf	8,1	;volatile
   553     06C6                     l696:
   554                           
   555                           ;main.c: 38:     PORTDbits.RD2 = 1;
   556     06C6  1508               	bsf	8,2	;volatile
   557                           
   558                           ;main.c: 39:     _delay((unsigned long)((5)*(20000000/4000.0)));
   559     06C7  3021               	movlw	33
   560     06C8  00F1               	movwf	??_lcd_cmd+1
   561     06C9  3076               	movlw	118
   562     06CA  00F0               	movwf	??_lcd_cmd
   563     06CB                     u277:
   564     06CB  0BF0               	decfsz	??_lcd_cmd,f
   565     06CC  2ECB               	goto	u277
   566     06CD  0BF1               	decfsz	??_lcd_cmd+1,f
   567     06CE  2ECB               	goto	u277
   568     06CF  0000               	nop
   569     06D0                     l698:
   570                           
   571                           ;main.c: 40:     PORTDbits.RD2 = 0;
   572     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   573     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   574     06D2  1108               	bcf	8,2	;volatile
   575     06D3                     l20:
   576     06D3  0008               	return
   577     06D4                     __end_of_lcd_cmd:
   578                           
   579                           	psect	text4
   580     0730                     __ptext4:	
   581 ;; *************** function _keypad *****************
   582 ;; Defined at:
   583 ;;		line 58 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, pclath, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 1
   604 ;; This function calls:
   605 ;;		_lcd_data
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     0730                     _keypad:	
   612                           ;psect for function _keypad
   613                           
   614     0730                     l710:	
   615                           ;incstack = 0
   616                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   617                           
   618                           
   619                           ;main.c: 60:     PORTBbits.RB0=1; PORTBbits.RB1=0; PORTBbits.RB2=0;
   620     0730  1283               	bcf	3,5	;RP0=0, select bank0
   621     0731  1303               	bcf	3,6	;RP1=0, select bank0
   622     0732  1406               	bsf	6,0	;volatile
   623     0733  1086               	bcf	6,1	;volatile
   624     0734  1106               	bcf	6,2	;volatile
   625                           
   626                           ;main.c: 61:     if(PORTBbits.RB4==1)
   627     0735  1E06               	btfss	6,4	;volatile
   628     0736  2F38               	goto	u21
   629     0737  2F39               	goto	u20
   630     0738                     u21:
   631     0738  2F45               	goto	l32
   632     0739                     u20:
   633     0739                     l712:
   634                           
   635                           ;main.c: 62:     {;main.c: 63:         lcd_data('1');
   636     0739  3031               	movlw	49
   637     073A  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   638     073F                     l33:	
   639                           ;main.c: 64:         while(PORTBbits.RB4==1);
   640                           
   641     073F  1283               	bcf	3,5	;RP0=0, select bank0
   642     0740  1303               	bcf	3,6	;RP1=0, select bank0
   643     0741  1A06               	btfsc	6,4	;volatile
   644     0742  2F44               	goto	u31
   645     0743  2F45               	goto	u30
   646     0744                     u31:
   647     0744  2F3F               	goto	l33
   648     0745                     u30:
   649     0745                     l32:	
   650                           ;main.c: 65:     }
   651                           
   652                           
   653                           ;main.c: 66:     if(PORTBbits.RB5==1)
   654     0745  1E86               	btfss	6,5	;volatile
   655     0746  2F48               	goto	u41
   656     0747  2F49               	goto	u40
   657     0748                     u41:
   658     0748  2F55               	goto	l36
   659     0749                     u40:
   660     0749                     l714:
   661                           
   662                           ;main.c: 67:     {;main.c: 68:         lcd_data('4');
   663     0749  3034               	movlw	52
   664     074A  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   665     074F                     l37:	
   666                           ;main.c: 69:         while(PORTBbits.RB5==1);
   667                           
   668     074F  1283               	bcf	3,5	;RP0=0, select bank0
   669     0750  1303               	bcf	3,6	;RP1=0, select bank0
   670     0751  1A86               	btfsc	6,5	;volatile
   671     0752  2F54               	goto	u51
   672     0753  2F55               	goto	u50
   673     0754                     u51:
   674     0754  2F4F               	goto	l37
   675     0755                     u50:
   676     0755                     l36:	
   677                           ;main.c: 70:     }
   678                           
   679                           
   680                           ;main.c: 71:     if(PORTBbits.RB6==1)
   681     0755  1F06               	btfss	6,6	;volatile
   682     0756  2F58               	goto	u61
   683     0757  2F59               	goto	u60
   684     0758                     u61:
   685     0758  2F65               	goto	l40
   686     0759                     u60:
   687     0759                     l716:
   688                           
   689                           ;main.c: 72:     {;main.c: 73:         lcd_data('7');
   690     0759  3037               	movlw	55
   691     075A  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   692     075F                     l41:	
   693                           ;main.c: 74:         while(PORTBbits.RB6==1);
   694                           
   695     075F  1283               	bcf	3,5	;RP0=0, select bank0
   696     0760  1303               	bcf	3,6	;RP1=0, select bank0
   697     0761  1B06               	btfsc	6,6	;volatile
   698     0762  2F64               	goto	u71
   699     0763  2F65               	goto	u70
   700     0764                     u71:
   701     0764  2F5F               	goto	l41
   702     0765                     u70:
   703     0765                     l40:	
   704                           ;main.c: 75:     }
   705                           
   706                           
   707                           ;main.c: 76:     if(PORTBbits.RB7==1)
   708     0765  1F86               	btfss	6,7	;volatile
   709     0766  2F68               	goto	u81
   710     0767  2F69               	goto	u80
   711     0768                     u81:
   712     0768  2F75               	goto	l44
   713     0769                     u80:
   714     0769                     l718:
   715                           
   716                           ;main.c: 77:     {;main.c: 78:         lcd_data('*');
   717     0769  302A               	movlw	42
   718     076A  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   719     076F                     l45:	
   720                           ;main.c: 79:         while(PORTBbits.RB7==1);
   721                           
   722     076F  1283               	bcf	3,5	;RP0=0, select bank0
   723     0770  1303               	bcf	3,6	;RP1=0, select bank0
   724     0771  1B86               	btfsc	6,7	;volatile
   725     0772  2F74               	goto	u91
   726     0773  2F75               	goto	u90
   727     0774                     u91:
   728     0774  2F6F               	goto	l45
   729     0775                     u90:
   730     0775                     l44:	
   731                           ;main.c: 80:     }
   732                           
   733                           
   734                           ;main.c: 81:     PORTBbits.RB0=0; PORTBbits.RB1=1; PORTBbits.RB2=0;
   735     0775  1006               	bcf	6,0	;volatile
   736     0776  1486               	bsf	6,1	;volatile
   737     0777  1106               	bcf	6,2	;volatile
   738                           
   739                           ;main.c: 82:     if(PORTBbits.RB4==1)
   740     0778  1E06               	btfss	6,4	;volatile
   741     0779  2F7B               	goto	u101
   742     077A  2F7C               	goto	u100
   743     077B                     u101:
   744     077B  2F88               	goto	l48
   745     077C                     u100:
   746     077C                     l720:
   747                           
   748                           ;main.c: 83:     {;main.c: 84:         lcd_data('2');
   749     077C  3032               	movlw	50
   750     077D  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   751     0782                     l49:	
   752                           ;main.c: 85:         while(PORTBbits.RB4==1);
   753                           
   754     0782  1283               	bcf	3,5	;RP0=0, select bank0
   755     0783  1303               	bcf	3,6	;RP1=0, select bank0
   756     0784  1A06               	btfsc	6,4	;volatile
   757     0785  2F87               	goto	u111
   758     0786  2F88               	goto	u110
   759     0787                     u111:
   760     0787  2F82               	goto	l49
   761     0788                     u110:
   762     0788                     l48:	
   763                           ;main.c: 86:     }
   764                           
   765                           
   766                           ;main.c: 87:     if(PORTBbits.RB5==1)
   767     0788  1E86               	btfss	6,5	;volatile
   768     0789  2F8B               	goto	u121
   769     078A  2F8C               	goto	u120
   770     078B                     u121:
   771     078B  2F98               	goto	l52
   772     078C                     u120:
   773     078C                     l722:
   774                           
   775                           ;main.c: 88:     {;main.c: 89:         lcd_data('5');
   776     078C  3035               	movlw	53
   777     078D  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   778     0792                     l53:	
   779                           ;main.c: 90:         while(PORTBbits.RB5==1);
   780                           
   781     0792  1283               	bcf	3,5	;RP0=0, select bank0
   782     0793  1303               	bcf	3,6	;RP1=0, select bank0
   783     0794  1A86               	btfsc	6,5	;volatile
   784     0795  2F97               	goto	u131
   785     0796  2F98               	goto	u130
   786     0797                     u131:
   787     0797  2F92               	goto	l53
   788     0798                     u130:
   789     0798                     l52:	
   790                           ;main.c: 91:     }
   791                           
   792                           
   793                           ;main.c: 92:     if(PORTBbits.RB6==1)
   794     0798  1F06               	btfss	6,6	;volatile
   795     0799  2F9B               	goto	u141
   796     079A  2F9C               	goto	u140
   797     079B                     u141:
   798     079B  2FA8               	goto	l56
   799     079C                     u140:
   800     079C                     l724:
   801                           
   802                           ;main.c: 93:     {;main.c: 94:         lcd_data('8');
   803     079C  3038               	movlw	56
   804     079D  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   805     07A2                     l57:	
   806                           ;main.c: 95:         while(PORTBbits.RB6==1);
   807                           
   808     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   809     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   810     07A4  1B06               	btfsc	6,6	;volatile
   811     07A5  2FA7               	goto	u151
   812     07A6  2FA8               	goto	u150
   813     07A7                     u151:
   814     07A7  2FA2               	goto	l57
   815     07A8                     u150:
   816     07A8                     l56:	
   817                           ;main.c: 96:     }
   818                           
   819                           
   820                           ;main.c: 97:     if(PORTBbits.RB7==1)
   821     07A8  1F86               	btfss	6,7	;volatile
   822     07A9  2FAB               	goto	u161
   823     07AA  2FAC               	goto	u160
   824     07AB                     u161:
   825     07AB  2FB8               	goto	l60
   826     07AC                     u160:
   827     07AC                     l726:
   828                           
   829                           ;main.c: 98:     {;main.c: 99:         lcd_data('0');
   830     07AC  3030               	movlw	48
   831     07AD  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   832     07B2                     l61:	
   833                           ;main.c: 100:         while(PORTBbits.RB7==1);
   834                           
   835     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   836     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   837     07B4  1B86               	btfsc	6,7	;volatile
   838     07B5  2FB7               	goto	u171
   839     07B6  2FB8               	goto	u170
   840     07B7                     u171:
   841     07B7  2FB2               	goto	l61
   842     07B8                     u170:
   843     07B8                     l60:	
   844                           ;main.c: 101:     }
   845                           
   846                           
   847                           ;main.c: 102:     PORTBbits.RB0=0; PORTBbits.RB1=0; PORTBbits.RB2=1;
   848     07B8  1006               	bcf	6,0	;volatile
   849     07B9  1086               	bcf	6,1	;volatile
   850     07BA  1506               	bsf	6,2	;volatile
   851                           
   852                           ;main.c: 103:     if(PORTBbits.RB4==1)
   853     07BB  1E06               	btfss	6,4	;volatile
   854     07BC  2FBE               	goto	u181
   855     07BD  2FBF               	goto	u180
   856     07BE                     u181:
   857     07BE  2FCB               	goto	l64
   858     07BF                     u180:
   859     07BF                     l728:
   860                           
   861                           ;main.c: 104:     {;main.c: 105:         lcd_data('3');
   862     07BF  3033               	movlw	51
   863     07C0  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   864     07C5                     l65:	
   865                           ;main.c: 106:         while(PORTBbits.RB4==1);
   866                           
   867     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   868     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   869     07C7  1A06               	btfsc	6,4	;volatile
   870     07C8  2FCA               	goto	u191
   871     07C9  2FCB               	goto	u190
   872     07CA                     u191:
   873     07CA  2FC5               	goto	l65
   874     07CB                     u190:
   875     07CB                     l64:	
   876                           ;main.c: 107:     }
   877                           
   878                           
   879                           ;main.c: 108:     if(PORTBbits.RB5==1)
   880     07CB  1E86               	btfss	6,5	;volatile
   881     07CC  2FCE               	goto	u201
   882     07CD  2FCF               	goto	u200
   883     07CE                     u201:
   884     07CE  2FDB               	goto	l68
   885     07CF                     u200:
   886     07CF                     l730:
   887                           
   888                           ;main.c: 109:     {;main.c: 110:         lcd_data('6');
   889     07CF  3036               	movlw	54
   890     07D0  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   891     07D5                     l69:	
   892                           ;main.c: 111:         while(PORTBbits.RB5==1);
   893                           
   894     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   895     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   896     07D7  1A86               	btfsc	6,5	;volatile
   897     07D8  2FDA               	goto	u211
   898     07D9  2FDB               	goto	u210
   899     07DA                     u211:
   900     07DA  2FD5               	goto	l69
   901     07DB                     u210:
   902     07DB                     l68:	
   903                           ;main.c: 112:     }
   904                           
   905                           
   906                           ;main.c: 113:     if(PORTBbits.RB6==1)
   907     07DB  1F06               	btfss	6,6	;volatile
   908     07DC  2FDE               	goto	u221
   909     07DD  2FDF               	goto	u220
   910     07DE                     u221:
   911     07DE  2FEB               	goto	l72
   912     07DF                     u220:
   913     07DF                     l732:
   914                           
   915                           ;main.c: 114:     {;main.c: 115:         lcd_data('9');
   916     07DF  3039               	movlw	57
   917     07E0  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   918     07E5                     l73:	
   919                           ;main.c: 116:         while(PORTBbits.RB6==1);
   920                           
   921     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   922     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   923     07E7  1B06               	btfsc	6,6	;volatile
   924     07E8  2FEA               	goto	u231
   925     07E9  2FEB               	goto	u230
   926     07EA                     u231:
   927     07EA  2FE5               	goto	l73
   928     07EB                     u230:
   929     07EB                     l72:	
   930                           ;main.c: 117:     }
   931                           
   932                           
   933                           ;main.c: 118:     if(PORTBbits.RB7==1)
   934     07EB  1F86               	btfss	6,7	;volatile
   935     07EC  2FEE               	goto	u241
   936     07ED  2FEF               	goto	u240
   937     07EE                     u241:
   938     07EE  2FFB               	goto	l80
   939     07EF                     u240:
   940     07EF                     l734:
   941                           
   942                           ;main.c: 119:     {;main.c: 120:         lcd_data('#');
   943     07EF  3023               	movlw	35
   944     07F0  120A  118A  26AA  120A  118A  	fcall	_lcd_data
   945     07F5                     l77:	
   946                           ;main.c: 121:         while(PORTBbits.RB7==1);
   947                           
   948     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   949     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   950     07F7  1B86               	btfsc	6,7	;volatile
   951     07F8  2FFA               	goto	u251
   952     07F9  2FFB               	goto	u250
   953     07FA                     u251:
   954     07FA  2FF5               	goto	l77
   955     07FB                     u250:
   956     07FB                     l80:
   957     07FB  0008               	return
   958     07FC                     __end_of_keypad:
   959                           
   960                           	psect	text5
   961     06AA                     __ptext5:	
   962 ;; *************** function _lcd_data *****************
   963 ;; Defined at:
   964 ;;		line 24 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  data            1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  data            1    2[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0
   980 ;;      Temps:          2       0       0       0       0
   981 ;;      Totals:         3       0       0       0       0
   982 ;;Total ram usage:        3 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_lcd_string
   988 ;;		_keypad
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992     06AA                     _lcd_data:	
   993                           ;psect for function _lcd_data
   994                           
   995                           
   996                           ;incstack = 0
   997                           ; Regs used in _lcd_data: [wreg]
   998                           ;lcd_data@data stored from wreg
   999     06AA  00F2               	movwf	lcd_data@data
  1000     06AB                     l680:
  1001                           
  1002                           ;main.c: 24: void lcd_data (unsigned char data);main.c: 25: {;main.c: 26:     PORTC = da
      +                          ta;
  1003     06AB  0872               	movf	lcd_data@data,w
  1004     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1005     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1006     06AE  0087               	movwf	7	;volatile
  1007     06AF                     l682:
  1008                           
  1009                           ;main.c: 27:     PORTDbits.RD0 = 1;
  1010     06AF  1408               	bsf	8,0	;volatile
  1011     06B0                     l684:
  1012                           
  1013                           ;main.c: 28:     PORTDbits.RD1 = 0;
  1014     06B0  1088               	bcf	8,1	;volatile
  1015     06B1                     l686:
  1016                           
  1017                           ;main.c: 29:     PORTDbits.RD2 = 1;
  1018     06B1  1508               	bsf	8,2	;volatile
  1019                           
  1020                           ;main.c: 30:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1021     06B2  3021               	movlw	33
  1022     06B3  00F1               	movwf	??_lcd_data+1
  1023     06B4  3076               	movlw	118
  1024     06B5  00F0               	movwf	??_lcd_data
  1025     06B6                     u287:
  1026     06B6  0BF0               	decfsz	??_lcd_data,f
  1027     06B7  2EB6               	goto	u287
  1028     06B8  0BF1               	decfsz	??_lcd_data+1,f
  1029     06B9  2EB6               	goto	u287
  1030     06BA  0000               	nop
  1031     06BB                     l688:
  1032                           
  1033                           ;main.c: 31:     PORTDbits.RD2 = 0;
  1034     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1035     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1036     06BD  1108               	bcf	8,2	;volatile
  1037     06BE                     l17:
  1038     06BE  0008               	return
  1039     06BF                     __end_of_lcd_data:
  1040     007E                     btemp	set	126	;btemp
  1041     007E                     wtemp0	set	126
  1042                           
  1043                           	psect	idloc
  1044                           
  1045                           ;Config register IDLOC0 @ 0x2000
  1046                           ;	unspecified, using default values
  1047     2000                     	org	8192
  1048     2000  3FFF               	dw	16383
  1049                           
  1050                           ;Config register IDLOC1 @ 0x2001
  1051                           ;	unspecified, using default values
  1052     2001                     	org	8193
  1053     2001  3FFF               	dw	16383
  1054                           
  1055                           ;Config register IDLOC2 @ 0x2002
  1056                           ;	unspecified, using default values
  1057     2002                     	org	8194
  1058     2002  3FFF               	dw	16383
  1059                           
  1060                           ;Config register IDLOC3 @ 0x2003
  1061                           ;	unspecified, using default values
  1062     2003                     	org	8195
  1063     2003  3FFF               	dw	16383
  1064                           
  1065                           	psect	config
  1066                           
  1067                           ;Config register CONFIG @ 0x2007
  1068                           ;	Oscillator Selection bits
  1069                           ;	FOSC = HS, HS oscillator
  1070                           ;	Watchdog Timer Enable bit
  1071                           ;	WDTE = OFF, WDT disabled
  1072                           ;	Power-up Timer Enable bit
  1073                           ;	PWRTE = OFF, PWRT disabled
  1074                           ;	Brown-out Reset Enable bit
  1075                           ;	BOREN = OFF, BOR disabled
  1076                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1077                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1078                           ;	Data EEPROM Memory Code Protection bit
  1079                           ;	CPD = OFF, Data EEPROM code protection off
  1080                           ;	Flash Program Memory Write Enable bits
  1081                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1082                           ;	In-Circuit Debugger Mode bit
  1083                           ;	DEBUG = 0x1, unprogrammed default
  1084                           ;	Flash Program Memory Code Protection bit
  1085                           ;	CP = OFF, Code protection off
  1086     2007                     	org	8199
  1087     2007  3FBA               	dw	16314

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_cmd
    _keypad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     259
                             _keypad
                            _lcd_cmd
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     214
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad
     _lcd_data
   _lcd_cmd
   _lcd_initialise
     _lcd_cmd
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Apr 23 15:42:56 2024

                      pc 0002             lcd_data@data 0072                       l20 06D3  
                     l40 0765                       l32 0745                       l17 06BE  
                     l41 075F                       l33 073F                       l26 0707  
                     l60 07B8                       l52 0798                       l44 0775  
                     l36 0755                       l61 07B2                       l53 0792  
                     l45 076F                       l37 074F                       l29 06EC  
                     l80 07FB                       l72 07EB                       l64 07CB  
                     l56 07A8                       l48 0788                       l73 07E5  
                     l65 07C5                       l57 07A2                       l49 0782  
                     l68 07DB                       l77 07F5                       l69 07D5  
                     u20 0739                       u21 0738                       u30 0745  
                     u31 0744                       u40 0749                       u41 0748  
                     u50 0755                       u51 0754                       u60 0759  
                     u61 0758                       u70 0765                       u71 0764  
                     u80 0769                       u81 0768                       u90 0775  
                     u91 0774                       fsr 0004                      l710 0730  
                    l720 077C                      l712 0739                      l730 07CF  
                    l722 078C                      l714 0749                      l732 07DF  
                    l724 079C                      l716 0759                      l708 06D4  
                    l734 07EF                      l726 07AC                      l718 0769  
                    l750 06EE                      l680 06AB                      l728 07BF  
                    l752 06F0                      l760 070C                      l682 06AF  
                    l690 06C0                      l754 06FD                      l770 0727  
                    l762 070E                      l684 06B0                      l692 06C4  
                    l756 0701                      l764 0713                      l686 06B1  
                    l694 06C5                      l766 0719                      l758 0708  
                    l688 06BB                      l696 06C6                      l768 0721  
                    l698 06D0                      u100 077C                      u101 077B  
                    u110 0788                      u111 0787                      u200 07CF  
                    u120 078C                      u201 07CE                      u121 078B  
                    u210 07DB                      u130 0798                      u211 07DA  
                    u131 0797                      u220 07DF                      u140 079C  
                    u221 07DE                      u141 079B                      u230 07EB  
                    u150 07A8                      u231 07EA                      u151 07A7  
                    u240 07EF                      u160 07AC                      u241 07EE  
                    u161 07AB                      u250 07FB                      u170 07B8  
                    u251 07FA                      u171 07B7                      u180 07BF  
                    u260 0707                      u181 07BE                      u261 0706  
                    u190 07CB                      u191 07CA                      u277 06CB  
                    u287 06B6                      fsr0 0004                     STR_1 0009  
                   _main 0708                     btemp 007E                     start 0000  
            lcd_string@i 0076                    ?_main 0070                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_lcd_cmd 06D4                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0730  
                 ??_main 0077         __end_of_lcd_data 06BF                   _keypad 0730  
              ??_lcd_cmd 0070         ??_lcd_initialise 0073            lcd_string@num 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0708  
                ?_keypad 0070                ?_lcd_data 0070               _lcd_string 06ED  
             __stringtab 0003                  __ptext1 06ED                  __ptext2 06D4  
                __ptext3 06BF                  __ptext4 0730                  __ptext5 06AA  
                _lcd_cmd 06BF               ??_lcd_data 0070     end_of_initialization 07FC  
              _PORTBbits 0006                _PORTDbits 0008               lcd_cmd@cmd 0072  
            ?_lcd_string 0073           __end_of_keypad 07FC      start_initialization 07FC  
               ??_keypad 0073                ___latbits 0002                __pstrings 0003  
               ?_lcd_cmd 0070              __stringbase 0008             ??_lcd_string 0074  
     __end_of_lcd_string 0708       __end_of__stringtab 0009                 _lcd_data 06AA  
         _lcd_initialise 06D4   __end_of_lcd_initialise 06ED                stringcode 0003  
               stringdir 0003                 stringtab 0003         lcd_string@string 0075  
        ?_lcd_initialise 0070  
